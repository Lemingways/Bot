import telebot
from Config import keys, TOKEN
from utils_bot import CriptoConverter, ConvertionException
from telebot import types

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item_helper = types.KeyboardButton("–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞?üîç")
    item_values = types.KeyboardButton("–ö–∞–∫–∏–µ –≤–∞–ª—é—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?üè¶")
    markup.add(item_helper, item_values)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!!!\n–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–ò–º—è –≤–∞–ª—é—Ç—ã> \
 <–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> \
 <–∫–æ–ª-–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã> \
 \n \
\n–ü—Ä–∏–º–µ—Ä: –ë–∏—Ç–∫–æ–∏–Ω –î–æ–ª–ª–∞—Ä 2".format(message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def values(message: telebot.types.Message):
    text = "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:"
    if message.chat.type == 'private':
        if "–ö–∞–∫–∏–µ –≤–∞–ª—é—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?" in message.text or message.text == "/values":
            for key in keys.keys():
                text = '\n'.join((text, key))
            bot.reply_to(message, text)
        else:
            helper(message)


@bot.message_handler(content_types=['text'])
def helper(message: telebot.types.Message):
    text = "–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥ —Ñ–æ—Ä–º–∞—Ç–µ:\n<–ò–º—è –≤–∞–ª—é—Ç—ã> \
 <–í –∫–∞–∫—É—é –≤–∞–ª—é—Ç—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> \
 <–∫–æ–ª-–≤–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ–π –≤–∞–ª—é—Ç—ã> \
 \n \
 \n–ü—Ä–∏–º–µ—Ä: –ë–∏—Ç–∫–æ–∏–Ω –î–æ–ª–ª–∞—Ä 2"
    if message.chat.type == 'private':
        if "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞?" in message.text or message.text == "/help":
            bot.reply_to(message, text)
        else:
            convert(message)


@bot.message_handler(content_types=['text'])
def convert(message: telebot.types.Message):
    try:

        values = message.text.split(" ")

        if len(values) < 3:
            raise ConvertionException("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, /help")

        if len(values) > 3:
            raise ConvertionException("–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, /help")

        fsym, tsyms, sym = values
        total = CriptoConverter.convert(fsym, tsyms, sym)
    except ConvertionException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{e}")
    except Exception as e:
        bot.reply_to(message, f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É\n{e}")
    else:
        text = f"–¶–µ–Ω–∞ {sym} {keys[fsym]} –≤ {keys[tsyms]}: {total}"
        bot.send_message(message.chat.id, text)


bot.polling()
